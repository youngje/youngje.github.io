{"version":3,"sources":["Footer.js","Header.js","Info.js","TodoItem.js","TodoList.js","ToggleAllButton.js","App.js","useTodos.js","index.js"],"names":["FILTERS","key","path","display","Footer","todos","clearCompletedTodo","filter","setFilter","itemsLeft","todo","completed","itemText","length","className","map","FILTER","href","onClick","Header","addTodo","useState","name","setName","placeholder","value","onChange","event","target","onKeyUp","autoFocus","Info","TodoItem","toggleTodo","deleteTodo","updateTodo","id","editing","setEditing","setValue","editInput","useRef","completedClass","editingClass","type","checked","onDoubleClick","ref","onBlur","current","blur","TodoList","ToggleAllButton","completAllTodo","resetAllTodo","areAllCompleted","every","readOnly","htmlFor","MOCK_DATA","App","setTodos","uuid","newTodos","updatedTodo","useTodos","filterFunction","filteredTodos","useEffect","hashFilter","window","location","hash","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35cfd81c.chunk.js","sourcesContent":["const FILTERS = [\n  { key: 'all', path: '#/', display: 'All' },\n  { key: 'active', path: '#/active', display: 'Active' },\n  { key: 'completed', path: '#/completed', display: 'Completed' }\n];\n\nexport function Footer({ todos = [], clearCompletedTodo, filter, setFilter }) {\n  const itemsLeft = todos.filter(todo => !todo.completed);\n  const itemText = itemsLeft.length === 1 ? 'item' : 'items';\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{itemsLeft.length}</strong> {itemText} left</span>\n      <ul className=\"filters\">\n        {FILTERS.map(FILTER => (\n          <li key={FILTER.key}>\n            <a\n              className={FILTER.key === filter ? 'selected' : ''}\n              href={FILTER.path}\n              onClick={() => setFilter(FILTER.key)}\n            >\n              {FILTER.display}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <button\n        className=\"clear-completed\"\n        onClick={clearCompletedTodo}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n","import { useState } from 'react';\n\nexport function Header({ addTodo }) {\n  const [name, setName] = useState('');\n\n  const handleSubmit = (event) => {\n    if (event.key !== 'Enter') return;\n    if (!name) return;\n\n    addTodo(name);\n    setName('');\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        onKeyUp={handleSubmit}\n        autoFocus\n      />\n    </header>\n  );\n}\n","export function Info() {\n  return (\n    <footer className=\"info\">\n      <p>Double-click to edit a todo</p>\n      <p>Template by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a></p>\n      <p>Created by <a href=\"https://github.com/youngje\">윤영제</a></p>\n      <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n    </footer>\n  );\n}\n","import { useState, useRef } from 'react';\n\nexport function TodoItem({ todo, toggleTodo, deleteTodo, updateTodo }) {\n  const { id, name, completed } = todo;\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(name);\n  const editInput = useRef(null);\n\n  const completedClass = completed ? 'completed' : '';\n  const editingClass = editing ? 'editing' : '';\n\n  const onBlurEditing = () => {\n    setEditing(false);\n    updateTodo({ id, name: value });\n  }\n\n  const handleSubmit = (event) => {\n    if (event.key !== 'Enter') return;\n    if (!name) return;\n\n    editInput.current.blur();\n  }\n\n  return (\n    <li className={`${completedClass} ${editingClass}`}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => { toggleTodo(id) }}\n        />\n        <label onDoubleClick={() => { setEditing(true) }}>\n          {name}\n        </label>\n        <button\n          className=\"destroy\"\n          onClick={() => { deleteTodo(id) }}\n        />\n      </div>\n      <input\n        className=\"edit\"\n        ref={editInput}\n        value={value}\n        onChange={(event) => { setValue(event.target.value) }}\n        onBlur={onBlurEditing}\n        onKeyUp={handleSubmit}\n      />\n    </li>\n  );\n}\n","import { TodoItem } from \"./TodoItem\";\n\nexport function TodoList({ todos = [], toggleTodo, deleteTodo, updateTodo }) {\n  if (todos.length < 1) return null;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          toggleTodo={toggleTodo}\n          deleteTodo={deleteTodo}\n          updateTodo={updateTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n","export function ToggleAllButton({ todos, completAllTodo, resetAllTodo }) {\n  const areAllCompleted = todos.length && todos.every(todo => todo.completed)\n  const onToggleAllClick = () => {\n    if (areAllCompleted) return resetAllTodo();\n    return completAllTodo();\n  }\n\n  return (\n    <>\n      <input\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        type=\"checkbox\"\n        checked={areAllCompleted}\n        readOnly\n      />\n      <label\n        htmlFor=\"toggle-all\"\n        onClick={onToggleAllClick}\n      >\n        Mark all as complete\n      </label>\n    </>\n  );\n}\n","import 'todomvc-app-css/index.css';\nimport { useState, useEffect } from 'react';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Info } from './Info';\nimport { TodoList } from './TodoList';\nimport { ToggleAllButton } from './ToggleAllButton';\nimport { useTodos } from './useTodos';\n\nexport const MOCK_DATA = [\n  {\n    id: 'some-random-value-0',\n    name: 'Make todos with React',\n    completed: false,\n  },\n  {\n    id: 'some-random-value-1',\n    name: 'try fetch api',\n    completed: true,\n  },\n  {\n    id: 'some-random-value-2',\n    name: '안녕~',\n    completed: false,\n  }\n];\n\nfunction App() {\n  const {\n    todos,\n    addTodo,\n    toggleTodo,\n    deleteTodo,\n    updateTodo,\n    completAllTodo,\n    resetAllTodo,\n    clearCompletedTodo,\n  } = useTodos();\n\n  const [filter, setFilter] = useState('all');\n  const filterFunction = filter === 'active' ? (todo) => !todo.completed : (todo) => todo.completed;\n  const filteredTodos = filter === 'all' ? todos : todos.filter(filterFunction);\n\n  useEffect(() => {\n    const hashFilter = window.location.hash.replace('#/', '');\n\n    setFilter(hashFilter || 'all');\n  }, []);\n\n  return (\n    <>\n      <section className=\"todoapp\">\n        <Header addTodo={addTodo} />\n        <section className=\"main\">\n          <ToggleAllButton\n            todos={todos}\n            completAllTodo={completAllTodo}\n            resetAllTodo={resetAllTodo}\n          />\n          <TodoList\n            todos={filteredTodos}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n            updateTodo={updateTodo}\n          />\n        </section>\n        {todos?.length > 0 && (\n          <Footer\n            todos={todos}\n            clearCompletedTodo={clearCompletedTodo}\n            filter={filter}\n            setFilter={setFilter}\n          />\n        )}\n      </section>\n      <Info />\n    </>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { MOCK_DATA } from './App';\n\nexport function useTodos() {\n  const [todos, setTodos] = useState(MOCK_DATA);\n\n  const addTodo = (name) => {\n    const todo = {\n      id: uuid(),\n      name,\n      completed: false,\n    };\n    setTodos([...todos, todo]);\n  };\n\n  const toggleTodo = (id) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id !== id)\n        return todo;\n      return { ...todo, completed: !todo.completed };\n    });\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (id) => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (updatedTodo) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id === updatedTodo.id) return { ...todo, ...updatedTodo };\n      return todo;\n    })\n    setTodos(newTodos);\n  };\n\n  const completAllTodo = () => {\n    setTodos(todos.map(todo => ({...todo, completed: true })));\n  };\n\n  const resetAllTodo = () => {\n    setTodos(todos.map(todo => ({...todo, completed: false })));\n  };\n\n  const clearCompletedTodo = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  return {\n    todos,\n    addTodo,\n    toggleTodo,\n    deleteTodo,\n    updateTodo,\n    completAllTodo,\n    resetAllTodo,\n    clearCompletedTodo,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}